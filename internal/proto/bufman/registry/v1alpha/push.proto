/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package bufman.registry.v1alpha;

import "bufman/module/v1alpha/module.proto";

// PushService is the Push service.
service PushService {
  // Push pushes.
  // PushManifestAndBlobs pushes a module by encoding it in a manifest and blobs format.
  rpc PushManifestAndBlobs(PushManifestAndBlobsRequest) returns (PushManifestAndBlobsResponse) {
    option idempotency_level = IDEMPOTENT;
  }
}

// PushManifestAndBlobsRequest holds the module to push in the manifest+blobs
// encoding format.
message PushManifestAndBlobsRequest {
  string owner = 1;
  string repository = 2;
  // Manifest with all the module files being pushed.
  bufman.module.v1alpha.Blob manifest = 3;
  // Referenced blobs in the manifest. Keep in mind there is not necessarily one
  // blob per file, but one blob per digest, so for files with exactly the same
  // content, you can send just one blob.
  repeated bufman.module.v1alpha.Blob blobs = 4;
  // Optional; if provided, the provided tags
  // are created for the pushed commit.
  repeated string tags = 5;
  // If non-empty, the push creates a draft commit with this name.
  string draft_name = 6;
}

// PushManifestAndBlobsResponse is the pushed module pin, local to the used
// remote.
message PushManifestAndBlobsResponse {
  bufman.module.v1alpha.LocalModulePin local_module_pin = 1;
}
